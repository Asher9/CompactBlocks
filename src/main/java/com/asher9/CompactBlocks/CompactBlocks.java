package com.asher9.CompactBlocks;

import com.asher9.CompactBlocks.api.Events;
import com.asher9.CompactBlocks.config.ModConfig;
import com.asher9.CompactBlocks.proxies.CommonProxy;

import com.asher9.CompactBlocks.util.UpdateChecker;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

import java.io.File;

@Mod(modid = Reference.MODID, name = Reference.MODNAME, version = Reference.VERSION, guiFactory = Reference.GuiFactory)

public class CompactBlocks {

    public static ModConfig config;

    @SidedProxy(clientSide = Reference.ClientSide, serverSide = Reference.ServerSide)
    private static CommonProxy proxy;

    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {

        //Mod Info
        ModMetadata data = event.getModMetadata();
        data.autogenerated = false;
        data.name = TextFormatting.GREEN + Reference.getMODNAME();
        data.credits = TextFormatting.BLUE + "Asher_9";
        data.authorList.add(TextFormatting.BLUE + "Asher_9");

        File configDir = new File(event.getModConfigurationDirectory(), "CompactBlocks");
        config = new ModConfig(new File(configDir, "CompactBlocks.cfg"));

    }

    @EventHandler
    public void init(FMLInitializationEvent event) {
        if (event.getSide().isClient() && CompactBlocks.config.cache.checkUpdates) {
            MinecraftForge.EVENT_BUS.register(new Events());
            UpdateChecker.init();
        }

    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event) {

    }

    @SubscribeEvent
    public void onConfigChanged(ConfigChangedEvent.OnConfigChangedEvent event) {
        if (event.getModID().equals(Reference.getMODID()))
            config.syncConfig();
    }

}
