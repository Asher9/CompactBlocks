package com.asher9.CompactBlocks;

import com.asher9.CompactBlocks.api.CreativeTabCreator;
import com.asher9.CompactBlocks.api.Events;
import com.asher9.CompactBlocks.api.OreDictHandler;
import com.asher9.CompactBlocks.config.CConfig;
import com.asher9.CompactBlocks.init.*;
import com.asher9.CompactBlocks.proxies.CommonProxy;

import com.asher9.CompactBlocks.util.UpdateChecker;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.Mod;
//import net.minecraftforge.fml.common.Mod.EventHandler;
//import net.minecraftforge.fml.common.ModMetadata;
//import net.minecraftforge.fml.common.SidedProxy;
//import net.minecraftforge.fml.common.event.FMLInitializationEvent;
//import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
//import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;

@Mod(Reference.MODID)

public class CompactBlocks {

    //public static CConfigAlt config;

    @SidedProxy(clientSide = Reference.ClientSide, serverSide = Reference.ServerSide)
    private static CommonProxy proxy;

    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {

        //Mod Info
        ModMetadata data = event.getModMetadata();
        data.autogenerated = false;
        data.name = TextFormatting.GREEN + Reference.getMODNAME();
        data.credits = TextFormatting.BLUE + "Asher_9";
        data.authorList.add(TextFormatting.BLUE + "Asher_9");

        //File configDir = new File(event.getModConfigurationDirectory(), "CompactBlocks");
        //config = new CConfigAlt(new File(configDir, "CompactBlocks.cfg"));

        CInit.initAll();
        CModItems.register();
        CModBlocks.register();

        proxy.registerRenders();
    }

    @EventHandler
    public void init(FMLInitializationEvent event) {
        if (event.getSide().isClient() && CConfig.updateSettings.checkUpdates) {
            MinecraftForge.EVENT_BUS.register(new Events());
            UpdateChecker.init();
        }

        proxy.init();
        proxy.registerModelBakery();
        OreDictHandler.OreDictionary();
        CreativeTabCreator.init();
    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event) {
        CFurnaceRecipes.init();
        CShapedCrafting.init();
        CShapelessCrafting.init();
    }
}
